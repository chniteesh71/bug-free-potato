name: workflow-for-node-app

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  job1-test-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '22'

      - name: Cache node_modules
        uses: actions/cache@v4
        id: cache-node
        with:
          path: ./src/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        if: steps.cache-node.outputs.cache-hit != 'true'
        run: npm ci
        working-directory: ./src

      - name: Run Lint
        run: npm run lint
        working-directory: ./src

      - name: Run Tests
        run: npm test
        working-directory: ./src

  job2-build-docker:
    needs: job1-test-lint
    runs-on: ubuntu-latest
    env:
      DOCKER_REGISTRY: docker.io
      APP_NAME: node-sample-app
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Log in to Docker
        uses: docker/login-action@v3
        with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Tag Docker Image
        run: |
         docker build --no-cache -t ${{ secrets.DOCKER_USERNAME }}/node-sample-app:${{ github.sha }} .
         docker tag ${{ secrets.DOCKER_USERNAME }}/node-sample-app:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/node-sample-app:latest

      - name: Push both tags
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/node-sample-app:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/node-sample-app:latest

   